apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{.Release.Namespace}}
  name: {{ template "common.names.fullname" . }}-configmap
  labels:
    "app.kubernetes.io/name": '{{ template "common.names.name" . }}'
    "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
    "app.kubernetes.io/component": "shenyu-configmap"
    "app.kubernetes.io/instance": "{{ .Release.Name }}"
data:
  application-bootstrap.yml: |-
    {{- include "common.tplvalues.render" (dict "value" .Values.applicationConfig.bootstrap "context" $) | nindent 4 }}
  application-admin.yml: |-
    {{- include "common.tplvalues.render" (dict "value" .Values.applicationConfig.admin "context" $) | nindent 4 }}
  {{- if eq .Values.dataSource.active "h2" }}
  application-h2.yml: |-
    shenyu:
      database:
        dialect: h2
        init_script: "sql-script/h2/schema.sql"
        init_enable: {{ .Values.dataSource.initEnabled }}
    spring:
      datasource:
        url: jdbc:h2:mem:~/shenyu;DB_CLOSE_DELAY=-1;MODE=MySQL;
        username: {{ required ".dataSource.h2.username is required" .Values.dataSource.h2.username }}
        password: {{ required ".dataSource.h2.password is required" .Values.dataSource.h2.password }}
        driver-class-name: org.h2.Driver
  {{- end }}
  {{- if eq .Values.dataSource.active "mysql" }}
  application-mysql.yml: |-
    shenyu:
      database:
        dialect: mysql
        init_enable: {{ .Values.dataSource.initEnabled }}
    spring:
      datasource:
        url: jdbc:mysql://{{ template "common.names.fullname" . }}-mysql.{{.Release.Namespace}}.svc.cluster.local:3306/shenyu?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
        username: {{ required ".dataSource.mysql.username is required" .Values.dataSource.mysql.username }}
        password: {{ required "`dataSource.mysql.password` is required" .Values.dataSource.mysql.password }}
        driver-class-name: {{ .Values.dataSource.mysql.driverClass }}
  {{- end }}
  {{- if eq .Values.dataSource.active "pg" }}
  application-pg.yml: |-
    shenyu:
      database:
        dialect: postgresql
        init_enable: {{ .Values.dataSource.initEnabled }}

    spring:
      datasource:
        url: jdbc:postgresql://{{ template "common.names.fullname" . }}-pg.{{.Release.Namespace}}.svc.cluster.local:5432/shenyu
        username: {{ required ".dataSource.pg.username is required" .Values.dataSource.pg.username }}
        password: {{ required "`dataSource.pg.password` is required" .Values.dataSource.pg.password }}
        driver-class-name: {{ .Values.dataSource.pg.driverClass }}

    mybatis:
      type-handlers-package: org.apache.shenyu.admin.mybatis.pg.handler
  {{- end }}
  {{- if eq .Values.dataSource.active "oracle" }}
  application-oracle.yml: |-
    shenyu:
      database:
        dialect: oracle
        init_enable: {{ .Values.dataSource.initEnabled }}

    spring:
      datasource:
        url: jdbc:oracle:thin:@{{ template "common.names.fullname" . }}-oracle.{{.Release.Namespace}}.svc.cluster.local:1521/shenyu
        username: {{ required ".dataSource.oracle.username is required" .Values.dataSource.oracle.username }}
        password: {{ required "`dataSource.oracle.password` is required" .Values.dataSource.oracle.password }}
        driver-class-name: oracle.jdbc.OracleDriver
  {{- end}}
